{
    "parser": "@typescript-eslint/parser",
    "extends": ["plugin:prettier/recommended", "plugin:react-hooks/recommended"],
    "settings": {
        "import/resolver": { "node": { "extensions": [".js", ".ts", ".jsx", ".tsx"] } },
        "import/extensions": [".js", ".ts", ".jsx", ".tsx"]
    },
    "plugins": ["@typescript-eslint", "import", "prettier", "react", "react-hooks"],
    "rules": {
        "prettier/prettier": [
            "error",
            {
                "endOfLine": "auto"
            }
        ],
        "no-restricted-imports": [
            "error",
            {
                "paths": [
                    {
                        "name": "@mui/material",
                        "importNames": ["makeStyles", "createMuiTheme"],
                        "message": "Please import from @mui/material/styles instead. See https://material-ui.com/guides/minimizing-bundle-size/#option-2 for more information"
                    }
                ]
            }
        ],
        "@typescript-eslint/consistent-type-imports": [
            "error",
            {
                "prefer": "type-imports"
            }
        ],
        "@typescript-eslint/no-redeclare": ["off"],
        // "@typescript-eslint/no-duplicate-enum-values": "error",
        // "@typescript-eslint/no-duplicate-type-constituents": "error",
        // "@typescript-eslint/explicit-function-return-type": "error",
        "no-redeclare": "off",
        "import/no-anonymous-default-export": "off",
        "react-hooks/exhaustive-deps": "warn",
        "react-hooks/rules-of-hooks": "error",
        "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
        // 强制dafault在最后
        "default-case-last": "error",
        // 构造函数必须super
        "constructor-super": "error",
        // "no-var": "error",
        "no-this-before-super": "error",
        // this的别名规定为that
        // "consistent-this": ["error", "that"],
        "curly": ["error", "multi-line"],
        // "array-bracket-newline": ["error", "consistent"],
        // "array-element-newline": ["error", "consistent"],
        // 箭头函数必须使用括号
        "arrow-parens": ["error", "always"],
        // 函数参数换行
        "function-call-argument-newline": ["error", "consistent"],
        "new-parens": "error",
        "prefer-const": "error",
        // 考虑到preferconst的自动修复，合并声明还是never比较好。
        "one-var": ["error", "never"],
        // 变量初始化值不需要手动赋为undefined
        "no-undef-init": "error",
        // 立即执行函数的括号位置
        "wrap-iife": ["error", "inside"]
    }
}
